{"version":3,"sources":["components/Input/Input.jsx","components/other/changeValue.js","redux/mapReducer.js","components/Input/Output.jsx","App.js","components/other/mapCreator.js","reportWebVitals.js","index.js"],"names":["Input","props","type","value","state","inputValue","onChange","changeValue","inputStr","keyStr","mapArr","keyArr","split","inputArr","resArr","i","length","test","push","includes","keyItem","Math","floor","n","indexOf","m","SET_DATA","CHANGE_VALUE","mapReducer","action","outputValue","keyValue","map","data","Output","App","engList","defaultState","toUpperCase","useReducer","dispatch","useEffect","mapEng","str","strArr","l","arrMap","head","slice","tail","sumArr","concat","mapCreator","event","text","currentTarget","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NASeA,G,MAPD,SAACC,GACX,OACI,uBAAOC,KAAK,OAAOC,MAAOF,EAAMG,MAAMC,WAClCC,SAAUL,EAAMM,gB,OCLfA,EAAc,SAACC,EAAUC,EAAQC,GAI1C,IAHA,IAAIC,EAASF,EAAOG,MAAM,IACtBC,EAAWL,EAASI,MAAM,IAC1BE,EAAS,GACJC,EAAI,EAAGA,EAAIF,EAASG,OAAQD,IAAK,CAGrC,GAFW,KAEDE,KAAKJ,EAASE,KADb,oEAC0BE,KAAKJ,EAASE,IAChDD,EAAOI,KAAKL,EAASE,QAEpB,KAAIL,EAAO,GAAGS,SAASN,EAASE,IAK9B,MAJH,IAAIK,EAAUT,EAAOI,EAAIJ,EAAOK,OAASK,KAAKC,MAAMP,EAAIJ,EAAOK,SAC3DO,EAAIb,EAAO,GAAGc,QAAQX,EAASE,IAC/BU,EAAIf,EAAO,GAAGc,QAAQJ,GAC1BN,EAAOI,KAAKR,EAAOa,GAAGE,KAG9B,OAAOX,GCfPY,EAAW,WACXC,EAAe,eA2CJC,EAzCI,SAACxB,EAAOyB,GACvB,OAAQA,EAAO3B,MAQX,KAAKyB,EACD,OAAO,2BACAvB,GADP,IAEIC,WAAYwB,EAAO1B,MACnB2B,YAAavB,EAAYsB,EAAO1B,MAAOC,EAAM2B,SAAU3B,EAAM4B,OAGrE,KAAKN,EACD,OAAO,2BACAtB,GADP,IAEI4B,IAAKH,EAAOI,OAGpB,QACI,OAAO7B,IClBJ8B,EARA,SAACjC,GACZ,OACI,8BACKA,EAAMG,MAAM0B,eCsCVK,EApCH,WAEV,IAAMC,EAAU,6BAIZC,EAAe,CACjBL,IAAK,GACL3B,WAAY,GACZ0B,SALU,QAKIO,cACdR,YAAa,IAVC,EAaUS,qBAAWX,EAAYS,GAbjC,mBAaTjC,EAbS,KAaFoC,EAbE,KAehBC,qBAAU,WACR,IAAIC,ECPkB,SAACC,GAIvB,IAHA,IAAIC,EAASD,EAAI/B,MAAM,IACnBiC,EAAID,EAAO5B,OACX8B,EAAS,GACJ/B,EAAI,EAAGA,EAAI8B,EAAG9B,IAAK,CACxB,IAAIgC,EAAOH,EAAOI,MAAMjC,EAAG8B,GACvBI,EAAOL,EAAOI,MAAM,EAAGjC,GACvBmC,EAASH,EAAKI,OAAOF,GACzBH,EAAO5B,KAAKgC,GAEhB,OAAOJ,EDHMM,CAAWhB,EAAQE,eAChCE,EFSO,CACHtC,KAAMwB,EACNO,KEXgBS,MACnB,CAACN,IAQJ,OACE,gCACE,iDACA,cAAC,EAAD,CAAOhC,MAAOA,EACZG,YATc,SAAC8C,GACnB,IAAIC,EAAOD,EAAME,cAAcpD,MAAMmC,cACrCE,EFUO,CACHtC,KAAMyB,EACNxB,MEZcmD,OAQhB,cAAC,EAAD,CAAQlD,MAAOA,QE1BNoD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.082a06f7.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Input = (props) => {\r\n    return (\r\n        <input type='text' value={props.state.inputValue}\r\n            onChange={props.changeValue} />\r\n    )\r\n}\r\n\r\nexport default Input","export const changeValue = (inputStr, keyStr, mapArr) => {\r\n    let keyArr = keyStr.split('')\r\n    let inputArr = inputStr.split('')\r\n    let resArr = []\r\n    for (let i = 0; i < inputArr.length; i++) {\r\n        let space = /\\s/\r\n        let other = /[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,\\-.\\/:;<=>?@\\[\\]^_`{|}~]/\r\n         if (space.test(inputArr[i]) || other.test(inputArr[i])) {\r\n            resArr.push(inputArr[i])\r\n        }\r\n        else if (mapArr[0].includes(inputArr[i])) {\r\n            let keyItem = keyArr[i - keyArr.length * Math.floor(i / keyArr.length)]\r\n            let n = mapArr[0].indexOf(inputArr[i])\r\n            let m = mapArr[0].indexOf(keyItem)\r\n            resArr.push(mapArr[n][m])\r\n        } else break\r\n    }\r\n    return resArr\r\n}\r\n\r\n\r\n/* export const changeValue = (inputStr, keyStr, mapArr) => {\r\n    let keyArr = keyStr.split('')\r\n    let inputArr = inputStr.split('')\r\n    let resArr = []\r\n    for (let i = 0; i < inputArr.length; i++) {\r\n        let keyItem = keyArr[i - keyArr.length * Math.floor(i / keyArr.length)]\r\n        let n = mapArr[0].indexOf(inputArr[i])\r\n        let m = mapArr[0].indexOf(keyItem)\r\n        console.log('keyItem', keyItem)\r\n        console.log('n',n)\r\n        console.log('m', m)\r\n        resArr.push(mapArr[n][m])\r\n    }\r\n    return resArr\r\n} */","import { changeValue } from \"../components/other/changeValue\"\r\n\r\nlet SET_DATA = 'SET_DATA'\r\nlet CHANGE_VALUE = 'CHANGE_VALUE'\r\n\r\nconst mapReducer = (state, action) => {\r\n    switch (action.type) {\r\n        /* case CHANGE_VALUE: {\r\n            return {\r\n                ...state,\r\n                inputValue: action.value,\r\n                outputValue: changeValue(action.value, state.keyValue, state.map)\r\n            }\r\n        } */\r\n        case CHANGE_VALUE: {\r\n            return {\r\n                ...state,\r\n                inputValue: action.value,\r\n                outputValue: changeValue(action.value, state.keyValue, state.map)\r\n            }\r\n        }\r\n        case SET_DATA: {\r\n            return {\r\n                ...state,\r\n                map: action.data\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setMapData = (data) => {\r\n    return {\r\n        type: SET_DATA,\r\n        data\r\n    }\r\n}\r\n\r\nexport const setValue = (value) => {\r\n    return {\r\n        type: CHANGE_VALUE,\r\n        value\r\n    }\r\n}\r\n\r\nexport default mapReducer\r\n\r\n\r\n","import React from 'react'\r\n\r\nconst Output = (props) => {\r\n    return (\r\n        <div>\r\n            {props.state.outputValue}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Output","import React, { useEffect, useReducer } from 'react'\nimport './App.css';\nimport Input from './components/Input/Input';\nimport mapReducer, { setValue, setMapData } from './redux/mapReducer';\nimport { mapCreator } from './components/other/mapCreator'\nimport Output from './components/Input/Output';\n\nconst App = () => {\n\n  const engList = 'abcdefghijklmnopqrstuvwxyz'\n  \n  const key = 'lemon'\n\n  let defaultState = {\n    map: [],\n    inputValue: '',\n    keyValue: key.toUpperCase(),\n    outputValue: ''\n  }\n\n  const [state, dispatch] = useReducer(mapReducer, defaultState)\n\n  useEffect(() => {\n    let mapEng = mapCreator(engList.toUpperCase())\n    dispatch(setMapData(mapEng))\n  }, [engList])\n\n\n  const changeValue = (event) => {\n    let text = event.currentTarget.value.toUpperCase()\n    dispatch(setValue(text))\n  }\n\n  return (\n    <div>\n      <h2>Vigenere Cipher</h2>\n      <Input state={state}\n        changeValue={changeValue} />\n      <Output state={state}/>\n    </div>\n  )\n}\n\nexport default App;\n","/* export const mapMirrorCreator = (str) => {\r\n    let temp = str.split('')\r\n    let arrMap = []\r\n    for (let i = 0; i < temp.length; i++) {\r\n        arrMap.push([])\r\n    }\r\n    for (let i = 0; i < temp.length; i++) {\r\n        let k = i\r\n        for (let j = 0; j <= i; j++, k--) {\r\n            arrMap[k][j] = temp[i]\r\n            arrMap[temp.length - 1 - k][temp.length - 1 - j] = temp[i]\r\n        }\r\n    }\r\n    return arrMap\r\n} */\r\n\r\nexport const mapCreator = (str) => {\r\n    let strArr = str.split('')\r\n    let l = strArr.length\r\n    let arrMap = []\r\n    for (let i = 0; i < l; i++) {\r\n        let head = strArr.slice(i, l)\r\n        let tail = strArr.slice(0, i)\r\n        let sumArr = head.concat(tail)\r\n        arrMap.push(sumArr)\r\n    }\r\n    return arrMap\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}